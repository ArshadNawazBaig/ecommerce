// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  coverImage    String?
  description   String?
  verified      Boolean?
  accounts      Account[]
  sessions      Session[]
  products      Product[]
}

model VerificationToken {
  identifier String @id @map("_id")
  token      String   @unique
  expires    DateTime
 @@unique([identifier, token])
}

model Categories {
  id String @id @default(cuid()) @map("_id")
  storeId String
  store Store @relation(fields: [storeId], references: [id])
  name String 
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(cuid()) @map("_id")
  slug String @unique
  name String
  desc String
  img String
  views Int @default(0)
  userEmail String
  creator User @relation(fields: [userEmail], references: [email])
  createdAt DateTime @default(now())
  isFeatured Boolean @default(false)
}

model Store {
  id        String @id @default(cuid()) @map("_id")
  name      String?
  userEmail String?
  billboards Billboard[]
  categories Categories[]
  sizes Size[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id String @id @default(cuid()) @map("_id")
  storeId String
  store Store @relation(fields: [storeId], references: [id])
  categories Categories[]
  label String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id String @id @default(cuid()) @map("_id")
  storeId String
  store Store @relation(fields: [storeId], references: [id])
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}